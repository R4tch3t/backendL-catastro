{"version":3,"sources":["assets/jss/material-dashboard-react/layouts/adminStyle.js","layouts/Admin.js"],"names":["appStyle","theme","wrapper","position","top","height","mainPanel","breakpoints","up","width","drawerWidth","transition","maxHeight","overflowScrolling","content","marginTop","padding","minHeight","container","map","ps","switchRoutes","routes","prop","key","layout","path","component","from","to","useStyles","makeStyles","styles","Admin","rest","bandFadeSide","posMain","leftMain","window","innerWidth","classes","React","createRef","useState","bgImage","image","setImage","color","setColor","fixedClasses","setFixedClasses","mobileOpen","setMobileOpen","handleDrawerToggle","getRoute","location","pathname","resizeFunction","sideBtn","document","getElementById","style","display","nextSibling","left","zIndex","useEffect","navigator","platform","indexOf","PerfectScrollbar","current","suppressScrollX","suppressScrollY","body","overflow","addEventListener","destroy","removeEventListener","className","logoText","logo","open","ref","handleImageClick","handleColorClick","bgColor","handleFixedClick"],"mappings":"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","file":"static/js/3.835854e6.chunk.js","sourcesContent":["import {\n  drawerWidth,\n  transition,\n  container\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst appStyle = theme => ({\n  wrapper: {\n    position: \"relative\",\n    top: \"0\",\n    height: \"100vh\"\n  },\n  mainPanel: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    },\n    overflow: \"auto\",\n    position: \"relative\",\n    float: \"right\",\n    ...transition,\n    maxHeight: \"100%\",\n    width: \"100%\",\n    overflowScrolling: \"touch\"\n  },\n  content: {\n    marginTop: \"70px\",\n    padding: \"30px 15px\",\n    minHeight: \"calc(100vh - 123px)\"\n  },\n  container,\n  map: {\n    marginTop: \"70px\"\n  }\n});\n\nexport default appStyle;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"routes.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\n\nimport bgImage from \"assets/img/sidebar-5.jpg\";\nimport logo from \"@material-ui/icons/Home\";\n//import logo from \"assets/img/reactlogo.png\";\n\nlet ps;\n\nconst switchRoutes = (\n  <Switch>\n    {routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      }\n      return null;\n    })}\n    <Redirect from=\"/\" to=\"/admin/padron\" />\n  </Switch>\n);\n\nconst useStyles = makeStyles(styles);\nconst Admin = ({ ...rest }) => {\n  let bandFadeSide = [true]\n  let posMain = ''\n  let leftMain = 0\n  if(window.innerWidth>=960){\n    posMain='absolute'\n    leftMain=260\n  }\n  // styles\n  const classes = useStyles();\n  // ref to help us initialize PerfectScrollbar on windows devices\n  const mainPanel = React.createRef();\n  // states and functions\n  const [image, setImage] = React.useState(bgImage);\n  const [color, setColor] = React.useState(\"blue\");\n  const [fixedClasses, setFixedClasses] = React.useState(\"dropdown\");\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const handleImageClick = image => {\n    setImage(image);\n  };\n  const handleColorClick = color => {\n    setColor(color);\n  };\n  const handleFixedClick = () => {\n    if (fixedClasses === \"dropdown\") {\n      setFixedClasses(\"dropdown show\");\n    } else {\n      setFixedClasses(\"dropdown\");\n    }\n  };\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  const getRoute = () => {\n    return window.location.pathname !== \"/admin/maps\";\n  };\n  const resizeFunction = () => {\n    const sideBtn = document.getElementById(\"sideBtn\")\n  \n    if (window.innerWidth >= 960) {\n      sideBtn.style.display='block'\n      if(bandFadeSide[0]){\n        sideBtn.nextSibling.nextSibling.style.left='260px'\n        sideBtn.nextSibling.nextSibling.style.width=(window.innerWidth-260)+'px'\n        sideBtn.style.zIndex=0\n      }else{\n        sideBtn.style.zIndex=9999\n      }\n     \n      setMobileOpen(false);\n    }else{\n      sideBtn.style.display='none'\n      sideBtn.style.zIndex=0\n      sideBtn.nextSibling.nextSibling.style.left='0'\n      sideBtn.nextSibling.nextSibling.style.width='100%'\n    }\n  };\n  // initialize and destroy the PerfectScrollbar plugin\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n    window.addEventListener(\"resize\", resizeFunction);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n  return (\n    <div className={classes.wrapper}>\n      <Sidebar\n        routes={routes}\n        logoText={\"Bienvenido\"}\n        logo={logo}\n        image={image}\n        handleDrawerToggle={handleDrawerToggle}\n        open={mobileOpen}\n        color={color}\n        bandFadeSide={bandFadeSide}\n        {...rest}\n      />\n      \n      <div className={classes.mainPanel} style={{position: posMain, left:leftMain}} ref={mainPanel}>\n        <Navbar\n          routes={routes}\n          handleDrawerToggle={handleDrawerToggle}\n          {...rest}\n        />\n        {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n        {getRoute() ? (\n          <div className={classes.content}>\n            <div className={classes.container}>{switchRoutes}</div>\n          </div>\n        ) : (\n          <div className={classes.map}>{switchRoutes}</div>\n        )}\n        {getRoute() ? <Footer /> : null}\n        <FixedPlugin\n          handleImageClick={handleImageClick}\n          handleColorClick={handleColorClick}\n          bgColor={color}\n          bgImage={image}\n          handleFixedClick={handleFixedClick}\n          fixedClasses={fixedClasses}\n        />\n      </div>\n    </div>\n  );\n}\nexport { Admin };"],"sourceRoot":""}